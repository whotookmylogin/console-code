(function(){const d=document.createElement("link").relList;if(d&&d.supports&&d.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))g(a);new MutationObserver(a=>{for(const c of a)if(c.type==="childList")for(const b of c.addedNodes)b.tagName==="LINK"&&b.rel==="modulepreload"&&g(b)}).observe(document,{childList:!0,subtree:!0});function f(a){const c={};return a.integrity&&(c.integrity=a.integrity),a.referrerPolicy&&(c.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?c.credentials="include":a.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function g(a){if(a.ep)return;a.ep=!0;const c=f(a);fetch(a.href,c)}})();document.addEventListener("DOMContentLoaded",()=>{const l=document.getElementById("start-btn"),d=document.getElementById("stop-btn"),f=document.getElementById("status-dot"),g=document.getElementById("status-text"),a=document.querySelectorAll('input[name="indicator-type"]'),c=document.getElementById("vscode-streaming"),b=document.querySelector(".ws-indicator"),x=document.querySelector(".ws-text");function D(){f.classList.remove("active"),g.textContent="Not capturing",l.classList.remove("btn-capturing"),l.classList.add("btn-primary"),l.innerHTML="<span>▶</span>Start Capture",l.disabled=!1,d.disabled=!0,d.style.display="flex"}l.addEventListener("click",async()=>{if(l.classList.contains("btn-capturing")){try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(t!=null&&t.id))return;chrome.tabs.sendMessage(t.id,{type:"capture:stop"},e=>{var o,r;if(chrome.runtime.lastError){console.error("Runtime error:",chrome.runtime.lastError);return}e!=null&&e.success?(D(),(o=e.session)!=null&&o.stats&&E(e.session.stats,e.session.sessionDuration),console.log("Captured logs:",(r=e.session)==null?void 0:r.logs)):console.error("Failed to stop capture:",e)})}catch(t){console.error("Error stopping capture:",t)}return}try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(t!=null&&t.id)){console.error("No active tab found");return}console.log("Attempting to inject and start capture on tab:",t.id,t.url);try{await chrome.scripting.executeScript({target:{tabId:t.id},func:()=>{window.consoleCapturePro||(console.log("Injecting ConsoleCapture Pro manually"),window.consoleCapturePro={isCapturing:!1,capturedLogs:[],recentLogs:[],sessionStartTime:null,sessionStats:{totalLogs:0,errorCount:0,warningCount:0,infoCount:0,logCount:0},indicator:null,indicatorType:"static",mouseTracker:null,websocket:null,vscodeStreaming:!1,originalConsole:{log:console.log,warn:console.warn,error:console.error,info:console.info}},chrome.runtime.onMessage.addListener((e,o,r)=>{var C,P,p,M,O;const{type:s}=e;switch(s){case"capture:start":console.log("ConsoleCapture: Starting capture..."),window.consoleCapturePro.isCapturing=!0,window.consoleCapturePro.capturedLogs=[],window.consoleCapturePro.recentLogs=[],window.consoleCapturePro.sessionStartTime=Date.now(),window.consoleCapturePro.sessionStats={totalLogs:0,errorCount:0,warningCount:0,infoCount:0,logCount:0},e.payload&&e.payload.indicatorType&&(window.consoleCapturePro.indicatorType=e.payload.indicatorType),e.payload&&typeof e.payload.vscodeStreaming=="boolean"&&(window.consoleCapturePro.vscodeStreaming=e.payload.vscodeStreaming,window.consoleCapturePro.vscodeStreaming?window.consoleCapturePro.connectToVSCode():window.consoleCapturePro.disconnectFromVSCode()),window.consoleCapturePro.createIndicator(window.consoleCapturePro.indicatorType),window.consoleCapturePro.intercepted||(console.log("ConsoleCapture: Setting up interception..."),window.consoleCapturePro.intercepted=!0,["log","warn","error","info"].forEach(n=>{const m=console[n];console[n]=function(...u){if(m.apply(console,u),window.consoleCapturePro&&window.consoleCapturePro.isCapturing){let L=null,W=null;if(n==="error"||u.length>0&&u[0]instanceof Error)try{if(L=(u[0]instanceof Error?u[0]:new Error).stack||null,L){const j=L.split(`
`).find(w=>w.includes("http")||w.includes("file://"));if(j){const w=j.match(/(https?:\/\/[^\s]+|file:\/\/[^\s]+):(\d+):(\d+)/);w&&(W={file:w[1],line:parseInt(w[2]),column:parseInt(w[3])})}}}catch{}const I={level:n,message:u.map(v=>typeof v=="object"?JSON.stringify(v,null,2):String(v)).join(" "),timestamp:new Date,url:window.location.href,stackTrace:L,sourceInfo:W,userAgent:navigator.userAgent,viewport:{width:window.innerWidth,height:window.innerHeight}};window.consoleCapturePro.capturedLogs.push(I),window.consoleCapturePro.recentLogs.push(I),window.consoleCapturePro.recentLogs.length>5&&window.consoleCapturePro.recentLogs.shift(),window.consoleCapturePro.sessionStats.totalLogs++,window.consoleCapturePro.sessionStats[n+"Count"]++,window.consoleCapturePro.vscodeStreaming&&window.consoleCapturePro.streamToVSCode(I)}}})),console.log("ConsoleCapture: Capture started, isCapturing =",window.consoleCapturePro.isCapturing),r({success:!0,session:{id:"session_"+Date.now(),logs:[]}});break;case"capture:stop":console.log("ConsoleCapture: Stopping capture, current logs:",window.consoleCapturePro.capturedLogs),window.consoleCapturePro.isCapturing=!1,window.consoleCapturePro.removeIndicator();const U=window.consoleCapturePro.capturedLogs.slice(),N=Object.assign({},window.consoleCapturePro.sessionStats),V=Date.now()-window.consoleCapturePro.sessionStartTime;console.log("ConsoleCapture: Returning logs:",U),r({success:!0,session:{id:"session_"+Date.now(),logs:U,stats:N,sessionDuration:Math.round(V/1e3)+"s"}});break;case"capture:status":r({success:!0,status:{isCapturing:window.consoleCapturePro.isCapturing,currentSession:window.consoleCapturePro.isCapturing?{logs:window.consoleCapturePro.capturedLogs,stats:window.consoleCapturePro.sessionStats,recentLogs:window.consoleCapturePro.recentLogs}:null}});break;case"get:recent-logs":r({success:!0,recentLogs:window.consoleCapturePro.recentLogs||[],stats:window.consoleCapturePro.sessionStats||{}});break;case"export:recent":const y=((C=e.payload)==null?void 0:C.format)||"json",h=window.consoleCapturePro.recentLogs||[];let i="";y==="json"?i=JSON.stringify(h,null,2):y==="vscode"?(i="// Console Debug Session - "+new Date().toLocaleString()+`
`,i+="// URL: "+window.location.href+`

`,h.forEach((n,m)=>{i+="// ["+n.level.toUpperCase()+"] "+new Date(n.timestamp).toLocaleTimeString()+`
`,i+="// "+n.message+`
`,n.sourceInfo&&(i+="// File: "+n.sourceInfo.file+":"+n.sourceInfo.line+":"+n.sourceInfo.column+`
`),n.stackTrace&&(i+=`// Stack Trace:
`,n.stackTrace.split(`
`).forEach(u=>{u.trim()&&(i+="//   "+u.trim()+`
`)})),i+=`
`})):y==="claude"?(i=`# Console Debug Session

`,i+=`**Environment:**
`,i+="- URL: `"+window.location.href+"`\n",i+="- Timestamp: "+new Date().toLocaleString()+`
`,i+="- User Agent: `"+(((P=h[0])==null?void 0:P.userAgent)||"Unknown")+`\`

`,i+=`**Console Logs:**

`,h.forEach((n,m)=>{i+="## "+(m+1)+". ["+n.level.toUpperCase()+"] "+new Date(n.timestamp).toLocaleTimeString()+`

`,i+="```\n"+n.message+"\n```\n\n",n.sourceInfo&&(i+="**Source:** `"+n.sourceInfo.file+":"+n.sourceInfo.line+":"+n.sourceInfo.column+`\`

`),n.stackTrace&&(i+="**Stack Trace:**\n```\n"+n.stackTrace+"\n```\n\n"),i+=`---

`})):y==="plain"?h.forEach((n,m)=>{i+="["+n.level.toUpperCase()+"] "+new Date(n.timestamp).toLocaleTimeString()+": "+n.message,n.sourceInfo&&(i+=" ("+n.sourceInfo.file+":"+n.sourceInfo.line+")"),i+=`
`}):y==="debug"&&(i=`=== DEBUG REPORT ===
`,i+="Generated: "+new Date().toLocaleString()+`
`,i+="URL: "+window.location.href+`
`,i+="Session Duration: "+Math.round((Date.now()-window.consoleCapturePro.sessionStartTime)/1e3)+`s
`,i+="Total Logs: "+window.consoleCapturePro.sessionStats.totalLogs+`
`,i+="Errors: "+window.consoleCapturePro.sessionStats.errorCount+`
`,i+="Warnings: "+window.consoleCapturePro.sessionStats.warningCount+`

`,i+=`=== CONSOLE LOGS ===
`,h.forEach((n,m)=>{i+=`
[`+(m+1)+"] "+n.level.toUpperCase()+" - "+new Date(n.timestamp).toLocaleString()+`
`,i+="Message: "+n.message+`
`,i+="URL: "+n.url+`
`,n.sourceInfo&&(i+="Source: "+n.sourceInfo.file+":"+n.sourceInfo.line+":"+n.sourceInfo.column+`
`),n.viewport&&(i+="Viewport: "+n.viewport.width+"x"+n.viewport.height+`
`),n.stackTrace&&(i+=`Stack Trace:
`+n.stackTrace+`
`),i+=`----------------------------------------
`})),r({success:!0,exportData:i,format:y});break;case"settings:indicator-type":window.consoleCapturePro.indicatorType=((p=e.payload)==null?void 0:p.indicatorType)||"static",window.consoleCapturePro.isCapturing&&window.consoleCapturePro.indicator&&(window.consoleCapturePro.removeIndicator(),window.consoleCapturePro.createIndicator(window.consoleCapturePro.indicatorType)),r({success:!0,indicatorType:window.consoleCapturePro.indicatorType});break;case"settings:vscode-streaming":window.consoleCapturePro.vscodeStreaming=((M=e.payload)==null?void 0:M.enabled)||!1,window.consoleCapturePro.vscodeStreaming?window.consoleCapturePro.connectToVSCode():window.consoleCapturePro.disconnectFromVSCode(),r({success:!0,vscodeStreaming:window.consoleCapturePro.vscodeStreaming,websocketStatus:((O=window.consoleCapturePro.websocket)==null?void 0:O.readyState)||WebSocket.CLOSED});break;default:r({success:!1,error:"Unknown message type"})}return!0}),window.consoleCapturePro.createIndicator=function(e="static"){if(window.consoleCapturePro.indicator)return;window.consoleCapturePro.indicatorType=e;const o=document.createElement("div");if(o.id="console-capture-indicator",o.innerHTML="🔴",e==="trail"?(o.style.cssText="position: fixed !important; z-index: 2147483647 !important; background: rgba(220, 53, 69, 0.95) !important; color: white !important; padding: 6px 10px !important; border-radius: 50% !important; font-size: 10px !important; font-family: -apple-system, BlinkMacSystemFont, Segoe UI, sans-serif !important; font-weight: bold !important; box-shadow: 0 4px 12px rgba(220, 53, 69, 0.4) !important; pointer-events: auto !important; cursor: pointer !important; animation: consoleCaptureGlow 2s ease-in-out infinite !important; transform: translate(-50%, -50%) !important; transition: all 0.1s ease-out !important;",window.consoleCapturePro.mouseTracker=function(r){window.consoleCapturePro.indicator&&(window.consoleCapturePro.indicator.style.left=r.clientX+20+"px",window.consoleCapturePro.indicator.style.top=r.clientY-20+"px")},document.addEventListener("mousemove",window.consoleCapturePro.mouseTracker),o.style.left="50%",o.style.top="50%"):e==="extension"?(o.innerHTML="🔴",o.style.cssText="position: fixed !important; top: 15px !important; left: 50% !important; transform: translateX(-50%) !important; z-index: 2147483647 !important; background: rgba(220, 53, 69, 0.95) !important; color: white !important; width: 24px !important; height: 24px !important; border-radius: 50% !important; font-size: 12px !important; font-family: -apple-system, BlinkMacSystemFont, Segoe UI, sans-serif !important; font-weight: bold !important; box-shadow: 0 4px 12px rgba(220, 53, 69, 0.6) !important; border: 2px solid white !important; pointer-events: auto !important; cursor: pointer !important; animation: consoleCaptureBlinkFast 0.8s ease-in-out infinite !important; display: flex !important; align-items: center !important; justify-content: center !important;"):o.style.cssText="position: fixed !important; top: 20px !important; right: 20px !important; z-index: 2147483647 !important; background: rgba(220, 53, 69, 0.9) !important; color: white !important; padding: 8px 12px !important; border-radius: 20px !important; font-size: 12px !important; font-family: -apple-system, BlinkMacSystemFont, Segoe UI, sans-serif !important; font-weight: bold !important; box-shadow: 0 2px 8px rgba(0,0,0,0.3) !important; pointer-events: auto !important; cursor: pointer !important; animation: consoleCaptureGlow 2s ease-in-out infinite !important;",!document.getElementById("console-capture-styles")){const r=document.createElement("style");r.id="console-capture-styles",r.textContent="@keyframes consoleCaptureGlow { 0%, 100% { opacity: 0.8; transform: scale(1); } 50% { opacity: 1; transform: scale(1.05); } } @keyframes consoleCaptureBlinkFast { 0%, 100% { opacity: 0.3; } 50% { opacity: 1; } }",document.head.appendChild(r)}o.addEventListener("click",()=>{try{chrome.runtime.sendMessage({type:"open-popup"},r=>{if(chrome.runtime.lastError){console.log("Could not open popup programmatically:",chrome.runtime.lastError);const s=document.createElement("div");s.textContent="Right-click extension icon to open menu",s.style.cssText="position: fixed !important; top: 50px !important; right: 50px !important; background: rgba(0,0,0,0.8) !important; color: white !important; padding: 8px 12px !important; border-radius: 4px !important; font-size: 12px !important; z-index: 2147483646 !important; pointer-events: none !important;",document.body.appendChild(s),setTimeout(()=>s.remove(),3e3)}})}catch{console.log("Could not access extension API from content script")}}),document.body.appendChild(o),window.consoleCapturePro.indicator=o,console.log("ConsoleCapture: Visual indicator created")},window.consoleCapturePro.removeIndicator=function(){window.consoleCapturePro.indicator&&(window.consoleCapturePro.indicator.remove(),window.consoleCapturePro.indicator=null),window.consoleCapturePro.mouseTracker&&(document.removeEventListener("mousemove",window.consoleCapturePro.mouseTracker),window.consoleCapturePro.mouseTracker=null)},window.consoleCapturePro.connectToVSCode=function(){if(!(window.consoleCapturePro.websocket&&window.consoleCapturePro.websocket.readyState===WebSocket.OPEN))try{window.consoleCapturePro.websocket=new WebSocket("ws://localhost:8765"),window.consoleCapturePro.websocket.onopen=function(){console.log("ConsoleCapture: Connected to VSCode extension"),window.consoleCapturePro.websocket.send(JSON.stringify({type:"session:start",url:window.location.href,timestamp:new Date().toISOString(),userAgent:navigator.userAgent}))},window.consoleCapturePro.websocket.onclose=function(){console.log("ConsoleCapture: Disconnected from VSCode extension"),setTimeout(()=>{window.consoleCapturePro.vscodeStreaming&&window.consoleCapturePro.connectToVSCode()},3e3)},window.consoleCapturePro.websocket.onerror=function(e){console.log("ConsoleCapture: WebSocket error:",e)}}catch(e){console.log("ConsoleCapture: Failed to connect to VSCode:",e)}},window.consoleCapturePro.disconnectFromVSCode=function(){window.consoleCapturePro.websocket&&(window.consoleCapturePro.websocket.close(),window.consoleCapturePro.websocket=null)},window.consoleCapturePro.streamToVSCode=function(e){if(window.consoleCapturePro.websocket&&window.consoleCapturePro.websocket.readyState===WebSocket.OPEN)try{window.consoleCapturePro.websocket.send(JSON.stringify({type:"log:entry",...e}))}catch(o){console.log("ConsoleCapture: Failed to stream log to VSCode:",o)}})}})}catch(e){console.error("Failed to inject script:",e)}setTimeout(()=>{var o;const e=((o=document.querySelector('input[name="indicator-type"]:checked'))==null?void 0:o.value)||"static";chrome.tabs.sendMessage(t.id,{type:"capture:start",payload:{indicatorType:e,vscodeStreaming:c.checked}},r=>{if(chrome.runtime.lastError){console.error("Runtime error:",chrome.runtime.lastError);return}r!=null&&r.success?(f.classList.add("active"),g.textContent="Capturing",l.classList.remove("btn-primary"),l.classList.add("btn-capturing"),l.innerHTML="<span>⏸</span>Capturing...",l.disabled=!1,d.disabled=!0,d.style.display="none",document.getElementById("recent-logs-section").style.display="block",document.getElementById("session-stats").style.display="block",k(),console.log("Capture started successfully")):console.error("Failed to start capture:",r)})},100)}catch(t){console.error("Error starting capture:",t)}}),a.forEach(t=>{t.addEventListener("change",async()=>{if(t.checked)try{const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(e!=null&&e.id))return;chrome.tabs.sendMessage(e.id,{type:"settings:indicator-type",payload:{indicatorType:t.value}},o=>{if(chrome.runtime.lastError){console.error("Failed to update indicator type:",chrome.runtime.lastError);return}console.log("Indicator type updated:",o==null?void 0:o.indicatorType)})}catch(e){console.error("Error updating indicator type:",e)}})}),c.addEventListener("change",async()=>{try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(t!=null&&t.id))return;c.checked&&S("connecting"),chrome.tabs.sendMessage(t.id,{type:"settings:vscode-streaming",payload:{enabled:c.checked}},e=>{if(chrome.runtime.lastError){console.error("Failed to update VSCode streaming:",chrome.runtime.lastError),S("disconnected");return}if(e!=null&&e.success){const o=e.websocketStatus;o===WebSocket.OPEN?S("connected"):o===WebSocket.CONNECTING?S("connecting"):S("disconnected")}})}catch(t){console.error("Error updating VSCode streaming:",t)}});function S(t){switch(b.className="ws-indicator ws-"+t,t){case"connected":x.textContent="Connected to VSCode";break;case"connecting":x.textContent="Connecting...";break;case"disconnected":default:x.textContent="Disconnected";break}}d.addEventListener("click",async()=>{try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(t!=null&&t.id))return;chrome.tabs.sendMessage(t.id,{type:"capture:stop"},e=>{var o,r;if(chrome.runtime.lastError){console.error("Runtime error:",chrome.runtime.lastError);return}e!=null&&e.success?(D(),(o=e.session)!=null&&o.stats&&E(e.session.stats,e.session.sessionDuration),console.log("Captured logs:",(r=e.session)==null?void 0:r.logs)):console.error("Failed to stop capture:",e)})}catch(t){console.error("Error stopping capture:",t)}}),setTimeout(()=>{chrome.tabs.query({active:!0,currentWindow:!0},([t])=>{t!=null&&t.id&&chrome.tabs.sendMessage(t.id,{type:"capture:status"},e=>{var o;chrome.runtime.lastError||e!=null&&e.success&&((o=e.status)!=null&&o.isCapturing)&&(f.classList.add("active"),g.textContent="Capturing",l.classList.remove("btn-primary"),l.classList.add("btn-capturing"),l.innerHTML="<span>⏸</span>Capturing...",l.disabled=!1,d.disabled=!0,d.style.display="none",document.getElementById("recent-logs-section").style.display="block",document.getElementById("session-stats").style.display="block",k())})})},100);async function k(){try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(t!=null&&t.id))return;chrome.tabs.sendMessage(t.id,{type:"get:recent-logs"},e=>{chrome.runtime.lastError||e!=null&&e.success&&(F(e.recentLogs||[]),e.stats&&E(e.stats))})}catch(t){console.error("Error updating recent logs:",t)}}function F(t){const e=document.getElementById("log-list");if(!t||t.length===0){e.innerHTML='<div class="empty-logs">No recent logs available</div>';return}e.innerHTML=t.map(o=>{const r=new Date(o.timestamp).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit",second:"2-digit"}),s=o.message.length>60?o.message.substring(0,60)+"...":o.message;return'<div class="log-entry"><div class="log-level '+o.level+'">'+o.level+'</div><div class="log-message">'+s+'</div><div class="log-time">'+r+"</div></div>"}).join("")}function E(t,e){t&&(document.getElementById("stats-total").textContent=t.totalLogs||0,document.getElementById("stats-errors").textContent=t.errorCount||0,document.getElementById("stats-warnings").textContent=t.warningCount||0),e&&(document.getElementById("stats-duration").textContent=e)}async function T(t,e){try{const[o]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(o!=null&&o.id))return;chrome.tabs.sendMessage(o.id,{type:"export:recent",payload:{format:t}},r=>{chrome.runtime.lastError||!(r!=null&&r.success)||navigator.clipboard.writeText(r.exportData).then(()=>{const s=document.getElementById(e),C=s.textContent;s.textContent="✓ Copied!",s.style.background="#28a745",s.style.color="white",setTimeout(()=>{s.textContent=C,s.style.background="",s.style.color=""},2e3)})})}catch(o){console.error("Error copying logs:",o)}}document.getElementById("copy-vscode-btn").addEventListener("click",()=>{T("vscode","copy-vscode-btn")}),document.getElementById("copy-claude-btn").addEventListener("click",()=>{T("claude","copy-claude-btn")}),document.getElementById("copy-plain-btn").addEventListener("click",()=>{T("plain","copy-plain-btn")}),document.getElementById("export-json-btn").addEventListener("click",async()=>{await B("json")}),document.getElementById("export-debug-btn").addEventListener("click",async()=>{await B("debug")});async function B(t){try{const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(e!=null&&e.id))return;chrome.tabs.sendMessage(e.id,{type:"export:recent",payload:{format:t}},o=>{if(chrome.runtime.lastError||!(o!=null&&o.success))return;let r="text/plain",s="txt";t==="json"?(r="application/json",s="json"):t==="debug"&&(r="text/plain",s="log");const C=new Blob([o.exportData],{type:r}),P=URL.createObjectURL(C),p=document.createElement("a");p.href=P,p.download="console-logs-"+new Date().toISOString().split("T")[0]+"."+s,document.body.appendChild(p),p.click(),document.body.removeChild(p),URL.revokeObjectURL(P)})}catch(e){console.error("Error exporting logs:",e)}}setInterval(()=>{f.classList.contains("active")&&k()},2e3)});
