(function(){"use strict";function F(n){return typeof n=="function"?{main:n}:n}const I=F(()=>{console.log("ConsoleCapture Pro background script started");let n=null,w=null;function b(){try{n=new WebSocket("ws://localhost:8765"),n.onopen=()=>{console.log("Connected to VSCode Console Capture extension"),w=`session-${Date.now()}`,n==null||n.send(JSON.stringify({type:"session:start",url:"Browser Extension",timestamp:new Date().toISOString(),userAgent:navigator.userAgent}))},n.onclose=()=>{console.log("Disconnected from VSCode Console Capture extension"),n=null,w=null,setTimeout(b,5e3)},n.onerror=o=>{console.log("VSCode WebSocket error:",o)}}catch(o){console.log("Failed to connect to VSCode:",o),setTimeout(b,5e3)}}function h(o){var k;(n==null?void 0:n.readyState)===WebSocket.OPEN&&n.send(JSON.stringify({type:"log:entry",level:o.level,message:o.message,timestamp:((k=o.timestamp)==null?void 0:k.toISOString())||new Date().toISOString(),url:o.url||"Unknown",stackTrace:o.stackTrace,sourceInfo:o.source}))}b(),chrome.runtime.onInstalled.addListener(o=>{console.log("ConsoleCapture Pro installed:",o.reason)}),chrome.runtime.onMessage.addListener((o,k,c)=>{console.log("Background received message:",o);const{type:x,payload:d}=o;switch(x){case"logs:forward":d!=null&&d.logs&&Array.isArray(d.logs)&&d.logs.forEach(f=>h(f)),c({success:!0});break;case"ping":c({success:!0,message:"Background script alive"});break;case"websocket:status":const y=n==null?void 0:n.readyState;let C="disconnected";y===WebSocket.OPEN?C="connected":y===WebSocket.CONNECTING&&(C="connecting"),c({success:!0,websocketStatus:C,sessionId:w});break;case"config:get":c({success:!0,config:{capturedLevels:["error","warn","info","log"],privacy:{enablePIIDetection:!0},performance:{maxMemoryMB:50,throttleMs:100}}});break;case"open-popup":try{chrome.action.openPopup().then(()=>{c({success:!0})}).catch(f=>{console.log("Could not open popup:",f),c({success:!1,error:f.message})})}catch(f){console.log("openPopup not available:",f),c({success:!1,error:"openPopup not available"})}break;default:console.warn("Unknown message type:",x),c({success:!1,error:"Unknown message type"})}return!0})});var j=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},_={exports:{}};(function(n,w){(function(b,h){h(n)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:j,function(b){var h,o;if(!((o=(h=globalThis.chrome)==null?void 0:h.runtime)!=null&&o.id))throw new Error("This script should only be loaded in a browser extension.");if(typeof globalThis.browser>"u"||Object.getPrototypeOf(globalThis.browser)!==Object.prototype){const k="The message port closed before a response was received.",c=x=>{const d={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(d).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class y extends WeakMap{constructor(r,g=void 0){super(g),this.createItem=r}get(r){return this.has(r)||this.set(r,this.createItem(r)),super.get(r)}}const C=e=>e&&typeof e=="object"&&typeof e.then=="function",f=(e,r)=>(...g)=>{x.runtime.lastError?e.reject(new Error(x.runtime.lastError.message)):r.singleCallbackArg||g.length<=1&&r.singleCallbackArg!==!1?e.resolve(g[0]):e.resolve(g)},v=e=>e==1?"argument":"arguments",R=(e,r)=>function(t,...i){if(i.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${v(r.minArgs)} for ${e}(), got ${i.length}`);if(i.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${v(r.maxArgs)} for ${e}(), got ${i.length}`);return new Promise((m,l)=>{if(r.fallbackToNoCallback)try{t[e](...i,f({resolve:m,reject:l},r))}catch(s){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,s),t[e](...i),r.fallbackToNoCallback=!1,r.noCallback=!0,m()}else r.noCallback?(t[e](...i),m()):t[e](...i,f({resolve:m,reject:l},r))})},L=(e,r,g)=>new Proxy(r,{apply(t,i,m){return g.call(i,e,...m)}});let P=Function.call.bind(Object.prototype.hasOwnProperty);const E=(e,r={},g={})=>{let t=Object.create(null),i={has(l,s){return s in e||s in t},get(l,s,A){if(s in t)return t[s];if(!(s in e))return;let a=e[s];if(typeof a=="function")if(typeof r[s]=="function")a=L(e,e[s],r[s]);else if(P(g,s)){let p=R(s,g[s]);a=L(e,e[s],p)}else a=a.bind(e);else if(typeof a=="object"&&a!==null&&(P(r,s)||P(g,s)))a=E(a,r[s],g[s]);else if(P(g,"*"))a=E(a,r[s],g["*"]);else return Object.defineProperty(t,s,{configurable:!0,enumerable:!0,get(){return e[s]},set(p){e[s]=p}}),a;return t[s]=a,a},set(l,s,A,a){return s in t?t[s]=A:e[s]=A,!0},defineProperty(l,s,A){return Reflect.defineProperty(t,s,A)},deleteProperty(l,s){return Reflect.deleteProperty(t,s)}},m=Object.create(e);return new Proxy(m,i)},M=e=>({addListener(r,g,...t){r.addListener(e.get(g),...t)},hasListener(r,g){return r.hasListener(e.get(g))},removeListener(r,g){r.removeListener(e.get(g))}}),U=new y(e=>typeof e!="function"?e:function(g){const t=E(g,{},{getContent:{minArgs:0,maxArgs:0}});e(t)}),B=new y(e=>typeof e!="function"?e:function(g,t,i){let m=!1,l,s=new Promise(T=>{l=function(u){m=!0,T(u)}}),A;try{A=e(g,t,l)}catch(T){A=Promise.reject(T)}const a=A!==!0&&C(A);if(A!==!0&&!a&&!m)return!1;const p=T=>{T.then(u=>{i(u)},u=>{let O;u&&(u instanceof Error||typeof u.message=="string")?O=u.message:O="An unexpected error occurred",i({__mozWebExtensionPolyfillReject__:!0,message:O})}).catch(u=>{console.error("Failed to send onMessage rejected reply",u)})};return p(a?A:s),!0}),W=({reject:e,resolve:r},g)=>{x.runtime.lastError?x.runtime.lastError.message===k?r():e(new Error(x.runtime.lastError.message)):g&&g.__mozWebExtensionPolyfillReject__?e(new Error(g.message)):r(g)},$=(e,r,g,...t)=>{if(t.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${v(r.minArgs)} for ${e}(), got ${t.length}`);if(t.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${v(r.maxArgs)} for ${e}(), got ${t.length}`);return new Promise((i,m)=>{const l=W.bind(null,{resolve:i,reject:m});t.push(l),g.sendMessage(...t)})},q={devtools:{network:{onRequestFinished:M(U)}},runtime:{onMessage:M(B),onMessageExternal:M(B),sendMessage:$.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:$.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},N={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return d.privacy={network:{"*":N},services:{"*":N},websites:{"*":N}},E(x,q,d)};b.exports=c(chrome)}else b.exports=globalThis.browser})})(_);function S(n,...w){}var D={debug:(...n)=>S(console.debug,...n),log:(...n)=>S(console.log,...n),warn:(...n)=>S(console.warn,...n),error:(...n)=>S(console.error,...n)};try{I.main()instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(n){throw D.error("The background crashed on startup!"),n}})();
