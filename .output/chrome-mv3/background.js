(function(){"use strict";function $(g){return typeof g=="function"?{main:g}:g}const F=$(()=>{console.log("ConsoleCapture Pro background script started");let g=null,C=null;function b(){try{g=new WebSocket("ws://localhost:8765"),g.onopen=()=>{console.log("Connected to VSCode Console Capture extension"),C=`session-${Date.now()}`,g==null||g.send(JSON.stringify({type:"session:start",url:"Browser Extension",timestamp:new Date().toISOString(),userAgent:navigator.userAgent}))},g.onclose=()=>{console.log("Disconnected from VSCode Console Capture extension"),g=null,C=null,setTimeout(b,5e3)},g.onerror=o=>{console.log("VSCode WebSocket error:",o)}}catch(o){console.log("Failed to connect to VSCode:",o),setTimeout(b,5e3)}}function h(o){var w;(g==null?void 0:g.readyState)===WebSocket.OPEN&&g.send(JSON.stringify({type:"log:entry",level:o.level,message:o.message,timestamp:((w=o.timestamp)==null?void 0:w.toISOString())||new Date().toISOString(),url:o.url||"Unknown",stackTrace:o.stackTrace,sourceInfo:o.source}))}b(),chrome.runtime.onInstalled.addListener(o=>{console.log("ConsoleCapture Pro installed:",o.reason)}),chrome.runtime.onMessage.addListener((o,w,u)=>{console.log("Background received message:",o);const{type:x,payload:d}=o;switch(x){case"logs:forward":d!=null&&d.logs&&Array.isArray(d.logs)&&d.logs.forEach(f=>h(f)),u({success:!0});break;case"ping":u({success:!0,message:"Background script alive"});break;case"config:get":u({success:!0,config:{capturedLevels:["error","warn","info","log"],privacy:{enablePIIDetection:!0},performance:{maxMemoryMB:50,throttleMs:100}}});break;case"open-popup":try{chrome.action.openPopup().then(()=>{u({success:!0})}).catch(f=>{console.log("Could not open popup:",f),u({success:!1,error:f.message})})}catch(f){console.log("openPopup not available:",f),u({success:!1,error:"openPopup not available"})}break;default:console.warn("Unknown message type:",x),u({success:!1,error:"Unknown message type"})}return!0})});var j=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},I={exports:{}};(function(g,C){(function(b,h){h(g)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:j,function(b){var h,o;if(!((o=(h=globalThis.chrome)==null?void 0:h.runtime)!=null&&o.id))throw new Error("This script should only be loaded in a browser extension.");if(typeof globalThis.browser>"u"||Object.getPrototypeOf(globalThis.browser)!==Object.prototype){const w="The message port closed before a response was received.",u=x=>{const d={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(d).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class f extends WeakMap{constructor(r,n=void 0){super(n),this.createItem=r}get(r){return this.has(r)||this.set(r,this.createItem(r)),super.get(r)}}const R=e=>e&&typeof e=="object"&&typeof e.then=="function",N=(e,r)=>(...n)=>{x.runtime.lastError?e.reject(new Error(x.runtime.lastError.message)):r.singleCallbackArg||n.length<=1&&r.singleCallbackArg!==!1?e.resolve(n[0]):e.resolve(n)},T=e=>e==1?"argument":"arguments",D=(e,r)=>function(t,...i){if(i.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${T(r.minArgs)} for ${e}(), got ${i.length}`);if(i.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${T(r.maxArgs)} for ${e}(), got ${i.length}`);return new Promise((m,l)=>{if(r.fallbackToNoCallback)try{t[e](...i,N({resolve:m,reject:l},r))}catch(s){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,s),t[e](...i),r.fallbackToNoCallback=!1,r.noCallback=!0,m()}else r.noCallback?(t[e](...i),m()):t[e](...i,N({resolve:m,reject:l},r))})},O=(e,r,n)=>new Proxy(r,{apply(t,i,m){return n.call(i,e,...m)}});let v=Function.call.bind(Object.prototype.hasOwnProperty);const S=(e,r={},n={})=>{let t=Object.create(null),i={has(l,s){return s in e||s in t},get(l,s,A){if(s in t)return t[s];if(!(s in e))return;let a=e[s];if(typeof a=="function")if(typeof r[s]=="function")a=O(e,e[s],r[s]);else if(v(n,s)){let p=D(s,n[s]);a=O(e,e[s],p)}else a=a.bind(e);else if(typeof a=="object"&&a!==null&&(v(r,s)||v(n,s)))a=S(a,r[s],n[s]);else if(v(n,"*"))a=S(a,r[s],n["*"]);else return Object.defineProperty(t,s,{configurable:!0,enumerable:!0,get(){return e[s]},set(p){e[s]=p}}),a;return t[s]=a,a},set(l,s,A,a){return s in t?t[s]=A:e[s]=A,!0},defineProperty(l,s,A){return Reflect.defineProperty(t,s,A)},deleteProperty(l,s){return Reflect.deleteProperty(t,s)}},m=Object.create(e);return new Proxy(m,i)},P=e=>({addListener(r,n,...t){r.addListener(e.get(n),...t)},hasListener(r,n){return r.hasListener(e.get(n))},removeListener(r,n){r.removeListener(e.get(n))}}),U=new f(e=>typeof e!="function"?e:function(n){const t=S(n,{},{getContent:{minArgs:0,maxArgs:0}});e(t)}),L=new f(e=>typeof e!="function"?e:function(n,t,i){let m=!1,l,s=new Promise(k=>{l=function(c){m=!0,k(c)}}),A;try{A=e(n,t,l)}catch(k){A=Promise.reject(k)}const a=A!==!0&&R(A);if(A!==!0&&!a&&!m)return!1;const p=k=>{k.then(c=>{i(c)},c=>{let M;c&&(c instanceof Error||typeof c.message=="string")?M=c.message:M="An unexpected error occurred",i({__mozWebExtensionPolyfillReject__:!0,message:M})}).catch(c=>{console.error("Failed to send onMessage rejected reply",c)})};return p(a?A:s),!0}),W=({reject:e,resolve:r},n)=>{x.runtime.lastError?x.runtime.lastError.message===w?r():e(new Error(x.runtime.lastError.message)):n&&n.__mozWebExtensionPolyfillReject__?e(new Error(n.message)):r(n)},B=(e,r,n,...t)=>{if(t.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${T(r.minArgs)} for ${e}(), got ${t.length}`);if(t.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${T(r.maxArgs)} for ${e}(), got ${t.length}`);return new Promise((i,m)=>{const l=W.bind(null,{resolve:i,reject:m});t.push(l),n.sendMessage(...t)})},q={devtools:{network:{onRequestFinished:P(U)}},runtime:{onMessage:P(L),onMessageExternal:P(L),sendMessage:B.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:B.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},E={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return d.privacy={network:{"*":E},services:{"*":E},websites:{"*":E}},S(x,q,d)};b.exports=u(chrome)}else b.exports=globalThis.browser})})(I);function y(g,...C){}var _={debug:(...g)=>y(console.debug,...g),log:(...g)=>y(console.log,...g),warn:(...g)=>y(console.warn,...g),error:(...g)=>y(console.error,...g)};try{F.main()instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(g){throw _.error("The background crashed on startup!"),g}})();
